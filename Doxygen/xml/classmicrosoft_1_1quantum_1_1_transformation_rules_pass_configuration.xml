<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration" kind="class" language="C++" prot="public">
    <compoundname>microsoft::quantum::TransformationRulesPassConfiguration</compoundname>
    <includes refid="_transformation_rules_pass_configuration_8hpp" local="no">TransformationRulesPass/TransformationRulesPassConfiguration.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa2122dd8fb4813ec97b62e93b178d7eb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::delete_dead_code_</definition>
        <argsstring></argsstring>
        <name>delete_dead_code_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="84" column="21" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a3b3f4fc464c015edba7625fe533420dc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::clone_functions_</definition>
        <argsstring></argsstring>
        <name>clone_functions_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="85" column="21" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa272946855d21349352f24728d7333d0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::transform_execution_path_only_</definition>
        <argsstring></argsstring>
        <name>transform_execution_path_only_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="86" column="21" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a3349d12caa550950d18a224c041aaa79" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t microsoft::quantum::TransformationRulesPassConfiguration::max_recursion_</definition>
        <argsstring></argsstring>
        <name>max_recursion_</name>
        <initializer>{512}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="87" column="21" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1ab107f5143d7e855de1903c84b922465d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string microsoft::quantum::TransformationRulesPassConfiguration::entry_point_attr_</definition>
        <argsstring></argsstring>
        <name>entry_point_attr_</name>
        <initializer>{&quot;InteropFriendly&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="88" column="21" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1af15bbd32615b62600e8a8c4527820d9f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::simplify_prior_transformation_</definition>
        <argsstring></argsstring>
        <name>simplify_prior_transformation_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="90" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa50dd84f548fd7bfbc483da461cbc540" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::assume_no_exceptions_</definition>
        <argsstring></argsstring>
        <name>assume_no_exceptions_</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="93" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a4dcb226196399999d8dea34f9800bad6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::reuse_qubits_</definition>
        <argsstring></argsstring>
        <name>reuse_qubits_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="97" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa2919f3d6d71d204ac1e23de7db1d280" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::annotate_qubit_use_</definition>
        <argsstring></argsstring>
        <name>annotate_qubit_use_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="98" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1af69975199e5a3bc9a4b655a64584ff0b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::reuse_results_</definition>
        <argsstring></argsstring>
        <name>reuse_results_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="99" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a2e11043c73aab715955c1d9d5a59ddc4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::annotate_result_use_</definition>
        <argsstring></argsstring>
        <name>annotate_result_use_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="100" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a8dda99dcd42f8af296379d606cc3dc80" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::group_measurements_</definition>
        <argsstring></argsstring>
        <name>group_measurements_</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="104" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a02d62c864780aee947adf8c9b062e4df" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::one_shot_measurement_</definition>
        <argsstring></argsstring>
        <name>one_shot_measurement_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="105" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a5b9ebdb3083d5fa17dcd60765c629623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void microsoft::quantum::TransformationRulesPassConfiguration::setup</definition>
        <argsstring>(ConfigurationManager &amp;config)</argsstring>
        <name>setup</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_configuration_manager" kindref="compound">ConfigurationManager</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Setup function that attached the configuration to the <ref refid="classmicrosoft_1_1quantum_1_1_configuration_manager" kindref="compound">ConfigurationManager</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="19" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="12" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a726c051578ab6a6b6d77af1df0b955fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::isDisabled</definition>
        <argsstring>() const</argsstring>
        <name>isDisabled</name>
        <briefdescription>
<para>Tests whether all functionality is disabled for this component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="28" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a0da974cb0bcac3402e864252576e5967" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::operator==</definition>
        <argsstring>(TransformationRulesPassConfiguration const &amp;ref) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration" kindref="compound">TransformationRulesPassConfiguration</ref> const &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Testing equality of two configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="31" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="132" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1ab95f924bde7f3a4884722dfbb29f28a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::shouldDeleteDeadCode</definition>
        <argsstring>() const</argsstring>
        <name>shouldDeleteDeadCode</name>
        <briefdescription>
<para>Whether or not the component should delete dead code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="37" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a2f2e9c0ddc9e2bfb7ae891e53f6646f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::shouldCloneFunctions</definition>
        <argsstring>() const</argsstring>
        <name>shouldCloneFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether or not the component should clone functions. This is relevant in relation to qubit allocation if execution paths are expanded. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="41" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1afa8268b4b9bea760bce841225609fae5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::assumeNoExceptions</definition>
        <argsstring>() const</argsstring>
        <name>assumeNoExceptions</name>
        <briefdescription>
<para>Whether or not we assume that the code does not throw at runtime. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="44" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a96661a4711bd3bea8788865ec70c6907" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::shouldTransformExecutionPathOnly</definition>
        <argsstring>() const</argsstring>
        <name>shouldTransformExecutionPathOnly</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether or not the component should follow the execution path only or it should be applied to all parts of the code. For statically allocated qubits one generally wants to follow the execution path whereas it makes more sense to apply to all parts of the code for dynamic qubit allocation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="50" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1abafd8ac31350dcf307fc64defc8520ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t microsoft::quantum::TransformationRulesPassConfiguration::maxRecursion</definition>
        <argsstring>() const</argsstring>
        <name>maxRecursion</name>
        <briefdescription>
<para>The maximum recursion acceptable when unrolling the execution path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="53" column="18" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1acce4ab33f0f09a10d10e601f20a6cd31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::shouldReuseQubits</definition>
        <argsstring>() const</argsstring>
        <name>shouldReuseQubits</name>
        <briefdescription>
<para>Whether or not to reuse qubits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="56" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa6bec9384a7cb546fc6059e145a6034e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::shouldAnnotateQubitUse</definition>
        <argsstring>() const</argsstring>
        <name>shouldAnnotateQubitUse</name>
        <briefdescription>
<para>Whether or not to annotate entry point with the number of qubits they use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="59" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a97dc372ed702c161657ef9b341a2618b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::shouldReuseResults</definition>
        <argsstring>() const</argsstring>
        <name>shouldReuseResults</name>
        <briefdescription>
<para>Whether or not to reuse result registers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="62" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a0dc9bf3a8a78ee1d151663e58538a30a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::shouldAnnotateResultUse</definition>
        <argsstring>() const</argsstring>
        <name>shouldAnnotateResultUse</name>
        <briefdescription>
<para>Whether or not to annotate entry point with the number of results they use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="65" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a380c53738fc8e0e483b503e99a86a28b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::shouldGroupMeasurements</definition>
        <argsstring>() const</argsstring>
        <name>shouldGroupMeasurements</name>
        <briefdescription>
<para>Whether or not the component should attempt to group measurements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="68" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a3630d5f6c09f2b2d7d93107597d25ce1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::oneShotMeasurement</definition>
        <argsstring>() const</argsstring>
        <name>oneShotMeasurement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether or not the target supports measurement (and result interpretation) during the circuit execution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="72" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a96ead027da602486b19e1c0e29cc5b85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::TransformationRulesPassConfiguration::shouldSimplifyPriorTransform</definition>
        <argsstring>() const</argsstring>
        <name>shouldSimplifyPriorTransform</name>
        <briefdescription>
<para>Whether or not simplify the IR using LLVM passes prior to transforming the IR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="75" column="14" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aeb2660c93da473cf6623fce821368a4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string microsoft::quantum::TransformationRulesPassConfiguration::entryPointAttr</definition>
        <argsstring>() const</argsstring>
        <name>entryPointAttr</name>
        <briefdescription>
<para>Attribute which indicate that a function is the entry point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="78" column="21" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1ad2493200a8bdb35e45c8ebcab15a3f4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration" kindref="compound">TransformationRulesPassConfiguration</ref></type>
        <definition>TransformationRulesPassConfiguration microsoft::quantum::TransformationRulesPassConfiguration::createDisabled</definition>
        <argsstring>()</argsstring>
        <name>createDisabled</name>
        <briefdescription>
<para>Creates a configuration where all functionality is disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="22" column="53" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.cpp" bodystart="44" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration class for the RuleTransformation pass. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" line="12" column="5" bodyfile="TransformationRulesPass/TransformationRulesPassConfiguration.hpp" bodystart="13" bodyend="106"/>
    <listofallmembers>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa2919f3d6d71d204ac1e23de7db1d280" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>annotate_qubit_use_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a2e11043c73aab715955c1d9d5a59ddc4" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>annotate_result_use_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa50dd84f548fd7bfbc483da461cbc540" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>assume_no_exceptions_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1afa8268b4b9bea760bce841225609fae5" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>assumeNoExceptions</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a3b3f4fc464c015edba7625fe533420dc" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>clone_functions_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1ad2493200a8bdb35e45c8ebcab15a3f4b" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>createDisabled</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa2122dd8fb4813ec97b62e93b178d7eb" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>delete_dead_code_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1ab107f5143d7e855de1903c84b922465d" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>entry_point_attr_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aeb2660c93da473cf6623fce821368a4c" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>entryPointAttr</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a8dda99dcd42f8af296379d606cc3dc80" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>group_measurements_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a726c051578ab6a6b6d77af1df0b955fa" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>isDisabled</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a3349d12caa550950d18a224c041aaa79" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>max_recursion_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1abafd8ac31350dcf307fc64defc8520ef" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>maxRecursion</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a02d62c864780aee947adf8c9b062e4df" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>one_shot_measurement_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a3630d5f6c09f2b2d7d93107597d25ce1" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>oneShotMeasurement</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a0da974cb0bcac3402e864252576e5967" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>operator==</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a4dcb226196399999d8dea34f9800bad6" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>reuse_qubits_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1af69975199e5a3bc9a4b655a64584ff0b" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>reuse_results_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a5b9ebdb3083d5fa17dcd60765c629623" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>setup</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa6bec9384a7cb546fc6059e145a6034e" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>shouldAnnotateQubitUse</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a0dc9bf3a8a78ee1d151663e58538a30a" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>shouldAnnotateResultUse</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a2f2e9c0ddc9e2bfb7ae891e53f6646f9" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>shouldCloneFunctions</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1ab95f924bde7f3a4884722dfbb29f28a1" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>shouldDeleteDeadCode</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a380c53738fc8e0e483b503e99a86a28b" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>shouldGroupMeasurements</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1acce4ab33f0f09a10d10e601f20a6cd31" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>shouldReuseQubits</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a97dc372ed702c161657ef9b341a2618b" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>shouldReuseResults</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a96ead027da602486b19e1c0e29cc5b85" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>shouldSimplifyPriorTransform</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1a96661a4711bd3bea8788865ec70c6907" prot="public" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>shouldTransformExecutionPathOnly</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1af15bbd32615b62600e8a8c4527820d9f" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>simplify_prior_transformation_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_transformation_rules_pass_configuration_1aa272946855d21349352f24728d7333d0" prot="private" virt="non-virtual"><scope>microsoft::quantum::TransformationRulesPassConfiguration</scope><name>transform_execution_path_only_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
