<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_llvm_passes_configuration_8cpp" kind="file" language="C++">
    <compoundname>LlvmPassesConfiguration.cpp</compoundname>
    <includes refid="_configuration_manager_8hpp" local="yes">Commandline/ConfigurationManager.hpp</includes>
    <includes refid="_llvm_passes_configuration_8hpp" local="yes">Generators/LlvmPassesConfiguration.hpp</includes>
    <incdepgraph>
      <node id="25">
        <label>llvm/IR/Module.h</label>
      </node>
      <node id="44">
        <label>iomanip</label>
      </node>
      <node id="23">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="50">
        <label>limits</label>
      </node>
      <node id="22">
        <label>llvm/IR/Function.h</label>
      </node>
      <node id="49">
        <label>Generators/LlvmPassesConfiguration.hpp</label>
        <link refid="_llvm_passes_configuration_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>llvm/InitializePasses.h</label>
      </node>
      <node id="24">
        <label>llvm/IR/LLVMContext.h</label>
      </node>
      <node id="15">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="12">
        <label>llvm/Analysis/InlineCost.h</label>
      </node>
      <node id="38">
        <label>llvm/LinkAllIR.h</label>
      </node>
      <node id="40">
        <label>llvm/Passes/StandardInstrumentations.h</label>
      </node>
      <node id="11">
        <label>Llvm/Llvm.hpp</label>
        <link refid="_llvm_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>llvm/Support/TargetSelect.h</label>
      </node>
      <node id="27">
        <label>llvm/IR/Verifier.h</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="33">
        <label>llvm/Transforms/Scalar/DCE.h</label>
      </node>
      <node id="9">
        <label>unordered_set</label>
      </node>
      <node id="2">
        <label>Commandline/ConfigurationManager.hpp</label>
        <link refid="_configuration_manager_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>llvm/Transforms/Scalar/LoopUnrollPass.h</label>
      </node>
      <node id="32">
        <label>llvm/Transforms/Scalar/ADCE.h</label>
      </node>
      <node id="39">
        <label>llvm/MC/SubtargetFeature.h</label>
      </node>
      <node id="14">
        <label>llvm/Passes/PassPlugin.h</label>
      </node>
      <node id="3">
        <label>Commandline/ConfigBind.hpp</label>
        <link refid="_config_bind_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="5">
        <label>Commandline/ParameterParser.hpp</label>
        <link refid="_parameter_parser_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>sstream</label>
      </node>
      <node id="31">
        <label>llvm/LinkAllPasses.h</label>
      </node>
      <node id="19">
        <label>llvm/IR/BasicBlock.h</label>
      </node>
      <node id="45">
        <label>iostream</label>
      </node>
      <node id="43">
        <label>llvm/Target/TargetMachine.h</label>
      </node>
      <node id="16">
        <label>llvm/Transforms/IPO/Inliner.h</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="28">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="18">
        <label>llvm/Transforms/Utils/Cloning.h</label>
      </node>
      <node id="13">
        <label>llvm/Passes/PassBuilder.h</label>
      </node>
      <node id="1">
        <label>Generators/LlvmPassesConfiguration.cpp</label>
        <link refid="_llvm_passes_configuration_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>llvm/IR/Constants.h</label>
      </node>
      <node id="26">
        <label>llvm/IR/Type.h</label>
      </node>
      <node id="41">
        <label>llvm/Support/InitLLVM.h</label>
      </node>
      <node id="6">
        <label>QatTypes/QatTypes.hpp</label>
        <link refid="_qat_types_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Commandline/IConfigBind.hpp</label>
        <link refid="_i_config_bind_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="35">
        <label>llvm/Linker/Linker.h</label>
      </node>
      <node id="47">
        <label>type_traits</label>
      </node>
      <node id="17">
        <label>llvm/Transforms/Utils/BasicBlockUtils.h</label>
      </node>
      <node id="34">
        <label>llvm/Analysis/ConstantFolding.h</label>
      </node>
      <node id="21">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="29">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
      <node id="48">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemicrosoft">microsoft</innernamespace>
    <innernamespace refid="namespacemicrosoft_1_1quantum">microsoft::quantum</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Microsoft<sp/>Corporation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Commandline/ConfigurationManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Generators/LlvmPassesConfiguration.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">microsoft</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">quantum</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>LlvmPassesConfiguration::LlvmPassesConfiguration()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a645eb2cccc3f75eca6fccf7420beea9a" kindref="member">LlvmPassesConfiguration::setup</ref>(ConfigurationManager&amp;<sp/>config)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.setSectionName(</highlight><highlight class="stringliteral">&quot;LLVM<sp/>Passes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Configuration<sp/>of<sp/>LLVM<sp/>passes.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.addParameter(always_inline_,<sp/></highlight><highlight class="stringliteral">&quot;always-inline&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Aggressively<sp/>inline<sp/>function<sp/>calls.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.addParameter(</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_pipeline_is_disabled_,<sp/></highlight><highlight class="stringliteral">&quot;disable-default-pipeline&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Disables<sp/>the<sp/>the<sp/>default<sp/>pipeline.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.addParameter(pass_pipeline_,<sp/></highlight><highlight class="stringliteral">&quot;passes&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LLVM<sp/>passes<sp/>pipeline<sp/>to<sp/>use<sp/>upon<sp/>applying<sp/>this<sp/>component.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.addParameter(inline_parameter_,<sp/></highlight><highlight class="stringliteral">&quot;inlining-parameter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>code<sp/>lines<sp/>acceptable<sp/>when<sp/>inlining.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>LlvmPassesConfiguration<sp/><ref refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a175c3567995b098ef9d3330aca82bd1d" kindref="member">LlvmPassesConfiguration::createDisabled</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LlvmPassesConfiguration<sp/>ret;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.always_inline_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.pass_pipeline_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.default_pipeline_is_disabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a88b8eb6fdc55092fa82a9c156a4a94d4" kindref="member">LlvmPassesConfiguration::alwaysInline</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="36"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>always_inline_;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1aa1e9204a5eb31e36887e648d8b455613" kindref="member">LlvmPassesConfiguration::disableDefaultPipeline</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="41"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_pipeline_is_disabled_;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>LlvmPassesConfiguration::passPipeline()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pass_pipeline_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1affc954f9eda3eb1dc90ffd02bb281806" kindref="member">LlvmPassesConfiguration::isDisabled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="51"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>always_inline_<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>pass_pipeline_<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a0bd9dc0d97efd91781d812fdeda14a75" kindref="member">LlvmPassesConfiguration::operator==</ref>(LlvmPassesConfiguration<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>ref)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>always_inline_<sp/>==<sp/>ref.always_inline_;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a715ea1809e88e7f4f1cb3e7f8acd7967" kindref="member">LlvmPassesConfiguration::inlineParameter</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="61"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inline_parameter_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>quantum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>microsoft</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Generators/LlvmPassesConfiguration.cpp"/>
  </compounddef>
</doxygen>
