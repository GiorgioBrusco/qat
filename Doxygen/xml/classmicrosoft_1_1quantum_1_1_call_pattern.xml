<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classmicrosoft_1_1quantum_1_1_call_pattern" kind="class" language="C++" prot="public">
    <compoundname>microsoft::quantum::CallPattern</compoundname>
    <basecompoundref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" prot="public" virt="non-virtual">microsoft::quantum::IOperandPrototype</basecompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmicrosoft_1_1quantum_1_1_call_pattern_1a8723c35b5849f7476b396592cb6951f7" prot="public" static="no">
        <type>std::string</type>
        <definition>using microsoft::quantum::CallPattern::String =  std::string</definition>
        <argsstring></argsstring>
        <name>String</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Rules/Patterns/CallPattern.hpp" line="20" column="9" bodyfile="Rules/Patterns/CallPattern.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_call_pattern_1ab77926784d61ea20519aa0e48d431f12" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String microsoft::quantum::CallPattern::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Name of the callee to match against. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Rules/Patterns/CallPattern.hpp" line="47" column="16" bodyfile="Rules/Patterns/CallPattern.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_call_pattern_1a4328b1cef879715abf74a1a046ce826a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>microsoft::quantum::CallPattern::CallPattern</definition>
        <argsstring>(String const &amp;name)</argsstring>
        <name>CallPattern</name>
        <param>
          <type>String const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Construction by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Rules/Patterns/CallPattern.hpp" line="26" column="18" bodyfile="Rules/Patterns/CallPattern.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_call_pattern_1aefa987bfd9fc0febd955b6c93763c6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microsoft::quantum::CallPattern::CallPattern</definition>
        <argsstring>(CallPattern const &amp;other)=delete</argsstring>
        <name>CallPattern</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_call_pattern" kindref="compound">CallPattern</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy construction prohibited. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Rules/Patterns/CallPattern.hpp" line="29" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_call_pattern_1a603094e2e6db4a79b81e77d2f35f3eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microsoft::quantum::CallPattern::CallPattern</definition>
        <argsstring>(CallPattern &amp;&amp;other)=default</argsstring>
        <name>CallPattern</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_call_pattern" kindref="compound">CallPattern</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move construction allowed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Rules/Patterns/CallPattern.hpp" line="32" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_call_pattern_1ae8f43eb5818bda787ff3bb0819d19302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microsoft::quantum::CallPattern::~CallPattern</definition>
        <argsstring>() override</argsstring>
        <name>~CallPattern</name>
        <briefdescription>
<para>Destructor implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Rules/Patterns/CallPattern.hpp" line="35" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_call_pattern_1a8084bd76394d0273ed73251cda2869d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::CallPattern::match</definition>
        <argsstring>(Value *instr, Captures &amp;captures) const override</argsstring>
        <name>match</name>
        <reimplements refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a9a4157b4f5b74dff9e5b413a64240236">match</reimplements>
        <param>
          <type>Value *</type>
          <declname>instr</declname>
        </param>
        <param>
          <type>Captures &amp;</type>
          <declname>captures</declname>
        </param>
        <briefdescription>
<para>Matches the callee by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Rules/Patterns/CallPattern.hpp" line="41" column="14" bodyfile="Rules/Patterns/CallPattern.cpp" bodystart="19" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_call_pattern_1a0181e57334a8fec2219474f6661768e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Child</type>
        <definition>CallPattern::Child microsoft::quantum::CallPattern::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <reimplements refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a82a0fd5f7297e519eaf8eddac0f38ed3">copy</reimplements>
        <briefdescription>
<para>Creates a copy of itself. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Rules/Patterns/CallPattern.hpp" line="44" column="15" bodyfile="Rules/Patterns/CallPattern.cpp" bodystart="43" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>microsoft::quantum::CallPattern</label>
        <link refid="classmicrosoft_1_1quantum_1_1_call_pattern"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>microsoft::quantum::IOperandPrototype</label>
        <link refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>microsoft::quantum::CallPattern</label>
        <link refid="classmicrosoft_1_1quantum_1_1_call_pattern"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>microsoft::quantum::IOperandPrototype</label>
        <link refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype"/>
      </node>
    </collaborationgraph>
    <location file="Rules/Patterns/CallPattern.hpp" line="17" column="5" bodyfile="Rules/Patterns/CallPattern.hpp" bodystart="18" bodyend="48"/>
    <listofallmembers>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1af998b63b21e8a0500a952248c140d0d0" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>addChild</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_call_pattern_1a4328b1cef879715abf74a1a046ce826a" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>CallPattern</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_call_pattern_1aefa987bfd9fc0febd955b6c93763c6fc" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>CallPattern</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_call_pattern_1a603094e2e6db4a79b81e77d2f35f3eaa" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>CallPattern</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a166b955925cb5f1464e20c2b94f91a78" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>captureAs</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a31fcffca4d5e1447f17c7ce64a490a6a" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>Captures</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a909d5269c5569a5948bce3395cb59cb7" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>Child</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a99846defccd39bf81668c12dac580510" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>Children</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_call_pattern_1a0181e57334a8fec2219474f6661768e4" prot="public" virt="virtual"><scope>microsoft::quantum::CallPattern</scope><name>copy</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a88789e3c997ddbad72a2ad2221652bcc" prot="protected" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>copyPropertiesFrom</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a25043289d7efcbe79db466f49dd51cd2" prot="protected" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>fail</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1ad0ac73c9329bbc7917b6f0e5ccb76ac3" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>Instruction</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a3c05f7599d41ac5179ff5ceceb97734c" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>IOperandPrototype</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_call_pattern_1a8084bd76394d0273ed73251cda2869d9" prot="public" virt="virtual"><scope>microsoft::quantum::CallPattern</scope><name>match</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a98d4e08ac8b7098713c3adc0e3ce1e95" prot="protected" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>matchChildren</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_call_pattern_1ab77926784d61ea20519aa0e48d431f12" prot="private" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>name_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_call_pattern_1a8723c35b5849f7476b396592cb6951f7" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>String</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1af9cf2561fc7d6bb39ec9f9486156d133" prot="protected" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>success</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1a823a98568040aa7bf8e2b7da13c19990" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>Value</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_call_pattern_1ae8f43eb5818bda787ff3bb0819d19302" prot="public" virt="non-virtual"><scope>microsoft::quantum::CallPattern</scope><name>~CallPattern</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype_1ac6fc06942a148f05ffea8d53e62f8506" prot="public" virt="virtual"><scope>microsoft::quantum::CallPattern</scope><name>~IOperandPrototype</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
