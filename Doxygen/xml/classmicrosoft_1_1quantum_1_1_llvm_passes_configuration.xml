<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration" kind="class" language="C++" prot="public">
    <compoundname>microsoft::quantum::LlvmPassesConfiguration</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1afad29ad385ae9f80196aa359ae759a88" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::LlvmPassesConfiguration::always_inline_</definition>
        <argsstring></argsstring>
        <name>always_inline_</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Whether or not LLVM component should inline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="58" column="21" bodyfile="Generators/LlvmPassesConfiguration.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a7777ee46f66598717785d0a56182b1c1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::LlvmPassesConfiguration::default_pipeline_is_disabled_</definition>
        <argsstring></argsstring>
        <name>default_pipeline_is_disabled_</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Whether or not the default pipeline is disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="59" column="21" bodyfile="Generators/LlvmPassesConfiguration.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1ac9c696e060592665ebaa695d2ca5dd19" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string microsoft::quantum::LlvmPassesConfiguration::pass_pipeline_</definition>
        <argsstring></argsstring>
        <name>pass_pipeline_</name>
        <initializer>{&quot;&quot;}</initializer>
        <briefdescription>
<para>Opt compatible LLVM passes pipeline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="60" column="21" bodyfile="Generators/LlvmPassesConfiguration.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a0251081b77df0d38b0194cd58d16e44d" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t microsoft::quantum::LlvmPassesConfiguration::inline_parameter_</definition>
        <argsstring></argsstring>
        <name>inline_parameter_</name>
        <initializer>{std::numeric_limits&lt;int32_t&gt;::max()}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="61" column="21" bodyfile="Generators/LlvmPassesConfiguration.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1aaa6c3f76591c6531e2504b607d72badc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microsoft::quantum::LlvmPassesConfiguration::LlvmPassesConfiguration</definition>
        <argsstring>()</argsstring>
        <name>LlvmPassesConfiguration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="18" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a645eb2cccc3f75eca6fccf7420beea9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void microsoft::quantum::LlvmPassesConfiguration::setup</definition>
        <argsstring>(ConfigurationManager &amp;config)</argsstring>
        <name>setup</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_configuration_manager" kindref="compound">ConfigurationManager</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Setup function that registers the different LLVM passes available via LLVM component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="23" column="14" bodyfile="Generators/LlvmPassesConfiguration.cpp" bodystart="14" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1affc954f9eda3eb1dc90ffd02bb281806" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::LlvmPassesConfiguration::isDisabled</definition>
        <argsstring>() const</argsstring>
        <name>isDisabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the configuration disables all effects of this component. The effect of this function being true is that registered component should have no effect on transformation and/or validation of the QIR. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="35" column="14" bodyfile="Generators/LlvmPassesConfiguration.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a0bd9dc0d97efd91781d812fdeda14a75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::LlvmPassesConfiguration::operator==</definition>
        <argsstring>(LlvmPassesConfiguration const &amp;ref) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration" kindref="compound">LlvmPassesConfiguration</ref> const &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Compares equality of two configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="38" column="14" bodyfile="Generators/LlvmPassesConfiguration.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a88b8eb6fdc55092fa82a9c156a4a94d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::LlvmPassesConfiguration::alwaysInline</definition>
        <argsstring>() const</argsstring>
        <name>alwaysInline</name>
        <briefdescription>
<para>Whether or not the LLVM AlwaysInline pass should be added to the profile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="44" column="14" bodyfile="Generators/LlvmPassesConfiguration.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1aa1e9204a5eb31e36887e648d8b455613" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::LlvmPassesConfiguration::disableDefaultPipeline</definition>
        <argsstring>() const</argsstring>
        <name>disableDefaultPipeline</name>
        <briefdescription>
<para>Whether or not the default LLVM pipeline is disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="47" column="14" bodyfile="Generators/LlvmPassesConfiguration.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a889babb3348b6c8f5b61b373db5c51d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string microsoft::quantum::LlvmPassesConfiguration::passPipeline</definition>
        <argsstring>() const</argsstring>
        <name>passPipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="49" column="21" bodyfile="Generators/LlvmPassesConfiguration.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a715ea1809e88e7f4f1cb3e7f8acd7967" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t microsoft::quantum::LlvmPassesConfiguration::inlineParameter</definition>
        <argsstring>() const</argsstring>
        <name>inlineParameter</name>
        <briefdescription>
<para>Parameter that defines the maximum number of lines of code allowed for inlining. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="52" column="17" bodyfile="Generators/LlvmPassesConfiguration.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a175c3567995b098ef9d3330aca82bd1d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration" kindref="compound">LlvmPassesConfiguration</ref></type>
        <definition>LlvmPassesConfiguration microsoft::quantum::LlvmPassesConfiguration::createDisabled</definition>
        <argsstring>()</argsstring>
        <name>createDisabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Static function creates a new configuration where all transformations/validation requirements are disabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Generators/LlvmPassesConfiguration.hpp" line="27" column="40" bodyfile="Generators/LlvmPassesConfiguration.cpp" bodystart="26" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Generators/LlvmPassesConfiguration.hpp" line="14" column="5" bodyfile="Generators/LlvmPassesConfiguration.hpp" bodystart="15" bodyend="62"/>
    <listofallmembers>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1afad29ad385ae9f80196aa359ae759a88" prot="private" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>always_inline_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a88b8eb6fdc55092fa82a9c156a4a94d4" prot="public" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>alwaysInline</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a175c3567995b098ef9d3330aca82bd1d" prot="public" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>createDisabled</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a7777ee46f66598717785d0a56182b1c1" prot="private" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>default_pipeline_is_disabled_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1aa1e9204a5eb31e36887e648d8b455613" prot="public" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>disableDefaultPipeline</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a0251081b77df0d38b0194cd58d16e44d" prot="private" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>inline_parameter_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a715ea1809e88e7f4f1cb3e7f8acd7967" prot="public" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>inlineParameter</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1affc954f9eda3eb1dc90ffd02bb281806" prot="public" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>isDisabled</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1aaa6c3f76591c6531e2504b607d72badc" prot="public" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>LlvmPassesConfiguration</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a0bd9dc0d97efd91781d812fdeda14a75" prot="public" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>operator==</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1ac9c696e060592665ebaa695d2ca5dd19" prot="private" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>pass_pipeline_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a889babb3348b6c8f5b61b373db5c51d2" prot="public" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>passPipeline</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_llvm_passes_configuration_1a645eb2cccc3f75eca6fccf7420beea9a" prot="public" virt="non-virtual"><scope>microsoft::quantum::LlvmPassesConfiguration</scope><name>setup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
