<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper" kind="class" language="C++" prot="public">
    <compoundname>microsoft::quantum::IrManipulationTestHelper</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a56024ef2e0ef9533e99244fc21bbadb4" prot="public" static="no">
        <type>std::string</type>
        <definition>using microsoft::quantum::IrManipulationTestHelper::String =  std::string</definition>
        <argsstring></argsstring>
        <name>String</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="20" column="9" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a2d4d102afdb106e7c9e805dd7aada78b" prot="public" static="no">
        <type>llvm::LLVMContext</type>
        <definition>using microsoft::quantum::IrManipulationTestHelper::LLVMContext =  llvm::LLVMContext</definition>
        <argsstring></argsstring>
        <name>LLVMContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="21" column="9" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1af39b11478913d614a64df980fd6b95de" prot="public" static="no">
        <type>llvm::SMDiagnostic</type>
        <definition>using microsoft::quantum::IrManipulationTestHelper::SMDiagnostic =  llvm::SMDiagnostic</definition>
        <argsstring></argsstring>
        <name>SMDiagnostic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="22" column="9" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a95c04fd344be1d2d8afa6ae09f05c41d" prot="public" static="no">
        <type>llvm::Module</type>
        <definition>using microsoft::quantum::IrManipulationTestHelper::Module =  llvm::Module</definition>
        <argsstring></argsstring>
        <name>Module</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="23" column="9" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a70642b0bb74d2ce7357a63a144e0820b" prot="public" static="no">
        <type>std::unique_ptr&lt; Module &gt;</type>
        <definition>using microsoft::quantum::IrManipulationTestHelper::ModulePtr =  std::unique_ptr&lt;Module&gt;</definition>
        <argsstring></argsstring>
        <name>ModulePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="24" column="9" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1aaddbaae145986f5960a67c2b30779d98" prot="public" static="no">
        <type>std::vector&lt; String &gt;</type>
        <definition>using microsoft::quantum::IrManipulationTestHelper::Strings =  std::vector&lt;String&gt;</definition>
        <argsstring></argsstring>
        <name>Strings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="25" column="9" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a189fd55760c36904970ffaded09f14ac" prot="public" static="no">
        <type>llvm::PassBuilder::OptimizationLevel</type>
        <definition>using microsoft::quantum::IrManipulationTestHelper::OptimizationLevel =  llvm::PassBuilder::OptimizationLevel</definition>
        <argsstring></argsstring>
        <name>OptimizationLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="26" column="9" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1acdd48df6b9d535a6a50ea1571ffd870c" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classmicrosoft_1_1quantum_1_1_profile_generator" kindref="compound">ProfileGenerator</ref> &gt;</type>
        <definition>using microsoft::quantum::IrManipulationTestHelper::GeneratorPtr =  std::shared_ptr&lt;ProfileGenerator&gt;</definition>
        <argsstring></argsstring>
        <name>GeneratorPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="27" column="9" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a828e75be0d72aa6d0afb03661b15b2a6" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; std::string &gt;</type>
        <definition>std::unordered_set&lt;std::string&gt; microsoft::quantum::IrManipulationTestHelper::opaque_declarations_</definition>
        <argsstring></argsstring>
        <name>opaque_declarations_</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Set of opaque type declarations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="123" column="28" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1addb1799b7e2d7fbac12bae165d24a24f" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; std::string &gt;</type>
        <definition>std::unordered_set&lt;std::string&gt; microsoft::quantum::IrManipulationTestHelper::function_declarations_</definition>
        <argsstring></argsstring>
        <name>function_declarations_</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Set of function declarations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="126" column="28" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ae21570adabe83466b89afa831f61762c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microsoft::quantum::IrManipulationTestHelper::compilation_failed_</definition>
        <argsstring></argsstring>
        <name>compilation_failed_</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Whether the compilation failed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="132" column="14" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ae15b6ef38fc3e5fca602d9096fa85aa8" prot="private" static="no" mutable="no">
        <type>SMDiagnostic</type>
        <definition>SMDiagnostic microsoft::quantum::IrManipulationTestHelper::error_</definition>
        <argsstring></argsstring>
        <name>error_</name>
        <briefdescription>
<para>The LLVM error encountered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="135" column="22" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a19901fd1188eb3deecb3416b8d37feef" prot="private" static="no" mutable="no">
        <type>LLVMContext</type>
        <definition>LLVMContext microsoft::quantum::IrManipulationTestHelper::context_</definition>
        <argsstring></argsstring>
        <name>context_</name>
        <briefdescription>
<para>The LLVM context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="138" column="21" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1afb8a5e01ee84916aaf5452aa9a83e06e" prot="private" static="no" mutable="no">
        <type>ModulePtr</type>
        <definition>ModulePtr microsoft::quantum::IrManipulationTestHelper::module_</definition>
        <argsstring></argsstring>
        <name>module_</name>
        <briefdescription>
<para>Pointer to the module obtained from the compilation process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="141" column="19" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ab9622ea38897cb662382424c89c621f3" prot="private" static="no" mutable="no">
        <type>llvm::PassBuilder</type>
        <definition>llvm::PassBuilder microsoft::quantum::IrManipulationTestHelper::pass_builder_</definition>
        <argsstring></argsstring>
        <name>pass_builder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="145" column="39" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ad38c75f2c8dc161363a61da190e4126d" prot="private" static="no" mutable="no">
        <type>llvm::LoopAnalysisManager</type>
        <definition>llvm::LoopAnalysisManager microsoft::quantum::IrManipulationTestHelper::loop_analysis_manager_</definition>
        <argsstring></argsstring>
        <name>loop_analysis_manager_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="146" column="39" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ae22051c193e2b248b7a6a559bb78c8da" prot="private" static="no" mutable="no">
        <type>llvm::FunctionAnalysisManager</type>
        <definition>llvm::FunctionAnalysisManager microsoft::quantum::IrManipulationTestHelper::function_analysis_manager_</definition>
        <argsstring></argsstring>
        <name>function_analysis_manager_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="147" column="39" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ac91d13cb17d859a4f94f1aaab4ce42d4" prot="private" static="no" mutable="no">
        <type>llvm::CGSCCAnalysisManager</type>
        <definition>llvm::CGSCCAnalysisManager microsoft::quantum::IrManipulationTestHelper::gscc_analysis_manager_</definition>
        <argsstring></argsstring>
        <name>gscc_analysis_manager_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="148" column="39" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ab290d3a5c8572d57eea0379e49541dca" prot="private" static="no" mutable="no">
        <type>llvm::ModuleAnalysisManager</type>
        <definition>llvm::ModuleAnalysisManager microsoft::quantum::IrManipulationTestHelper::module_analysis_manager_</definition>
        <argsstring></argsstring>
        <name>module_analysis_manager_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="149" column="39" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a002660c6f2da34f069d47f8c54b00944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microsoft::quantum::IrManipulationTestHelper::IrManipulationTestHelper</definition>
        <argsstring>()</argsstring>
        <name>IrManipulationTestHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="33" column="9" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ac3fa0b31a56b3fba128a0c12f80b0b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microsoft::quantum::IrManipulationTestHelper::IrManipulationTestHelper</definition>
        <argsstring>(IrManipulationTestHelper const &amp;)=delete</argsstring>
        <name>IrManipulationTestHelper</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper" kindref="compound">IrManipulationTestHelper</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="34" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1acb503ab846564bbd45c60120bd7250b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper" kindref="compound">IrManipulationTestHelper</ref> &amp;</type>
        <definition>IrManipulationTestHelper&amp; microsoft::quantum::IrManipulationTestHelper::operator=</definition>
        <argsstring>(IrManipulationTestHelper const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper" kindref="compound">IrManipulationTestHelper</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="35" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ad58c3fdabc2589426f8aa3a511039350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microsoft::quantum::IrManipulationTestHelper::IrManipulationTestHelper</definition>
        <argsstring>(IrManipulationTestHelper &amp;&amp;)=delete</argsstring>
        <name>IrManipulationTestHelper</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper" kindref="compound">IrManipulationTestHelper</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="36" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a1cb50e61082d6852c9ab3cbabc0b0541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper" kindref="compound">IrManipulationTestHelper</ref> &amp;</type>
        <definition>IrManipulationTestHelper&amp; microsoft::quantum::IrManipulationTestHelper::operator=</definition>
        <argsstring>(IrManipulationTestHelper &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper" kindref="compound">IrManipulationTestHelper</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="37" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a512daff52a5607ad0cf21e072584295d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String microsoft::quantum::IrManipulationTestHelper::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
<para>Generates a string for the IR currently held in the module. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="43" column="16" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="52" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ab49ea98df2fc8452bc3a70a6def6e066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Strings</type>
        <definition>IrManipulationTestHelper::Strings microsoft::quantum::IrManipulationTestHelper::toBodyInstructions</definition>
        <argsstring>()</argsstring>
        <name>toBodyInstructions</name>
        <briefdescription>
<para>Generates a list of instructions for the main function in the module. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="46" column="17" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="61" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ae9ad9386966f23f52e9ebed211719a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::IrManipulationTestHelper::hasInstructionSequence</definition>
        <argsstring>(Strings const &amp;instructions)</argsstring>
        <name>hasInstructionSequence</name>
        <param>
          <type>Strings const &amp;</type>
          <declname>instructions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests whether the main body contains a sequence of instructions. This function ignores instructions in-between the instruction set given. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="53" column="14" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="108" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a819d74f6dbfbb8319612f4293c23a1b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void microsoft::quantum::IrManipulationTestHelper::applyProfile</definition>
        <argsstring>(GeneratorPtr const &amp;profile, OptimizationLevel const &amp;optimisation_level=OptimizationLevel::O0, bool debug=false)</argsstring>
        <name>applyProfile</name>
        <param>
          <type>GeneratorPtr const &amp;</type>
          <declname>profile</declname>
        </param>
        <param>
          <type>OptimizationLevel const &amp;</type>
          <declname>optimisation_level</declname>
          <defval>OptimizationLevel::O0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Applies a profile to the module to allow which transforms the IR. This allow us to write small profiles to test a single piece of transformation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="57" column="14" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="134" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a1a1ed5ffdaeac6763826ce7996dc7f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void microsoft::quantum::IrManipulationTestHelper::declareOpaque</definition>
        <argsstring>(String const &amp;name)</argsstring>
        <name>declareOpaque</name>
        <param>
          <type>String const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Declares a opaque type. Only the name of the type should be supplied to this function. Example usage</para>
<para><programlisting><codeline><highlight class="normal">irmanip.declareOpaque(&quot;Qubit&quot;);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="71" column="14" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1aa510af2e3424a9ac7678de251d87be3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void microsoft::quantum::IrManipulationTestHelper::declareFunction</definition>
        <argsstring>(String const &amp;declaration)</argsstring>
        <name>declareFunction</name>
        <param>
          <type>String const &amp;</type>
          <declname>declaration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Declares a function. The full signature should be supplied to as the first argument. Example usage</para>
<para><programlisting><codeline><highlight class="normal">irmanip.declareOpaque(&quot;%Result*<sp/>@__quantum__rt__result_get_zero()&quot;);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="79" column="14" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ac246a17feb952bafd30d44649879ef55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::IrManipulationTestHelper::fromBodyString</definition>
        <argsstring>(String const &amp;body, String const &amp;args=&quot;&quot;)</argsstring>
        <name>fromBodyString</name>
        <param>
          <type>String const &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>String const &amp;</type>
          <declname>args</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an LLVM module given a function body. This function makes use of the inputs from <ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a1a1ed5ffdaeac6763826ce7996dc7f7d" kindref="member">IrManipulationTestHelper::declareOpaque</ref> and <ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1aa510af2e3424a9ac7678de251d87be3c" kindref="member">IrManipulationTestHelper::declareFunction</ref> to construct the full IR. Example usage:</para>
<para><programlisting><codeline><highlight class="normal">irmanip.fromBodyString(R&quot;script(</highlight></codeline>
<codeline><highlight class="normal">%leftMessage<sp/>=<sp/>call<sp/>%Qubit*<sp/>@__quantum__rt__qubit_allocate()</highlight></codeline>
<codeline><highlight class="normal">call<sp/>void<sp/>@__quantum__qis__h__body(%Qubit*<sp/>%leftMessage)</highlight></codeline>
<codeline><highlight class="normal">)script&quot;);</highlight></codeline>
</programlisting></para>
<para>Returns false if the IR is invalid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="94" column="14" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="214" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1acfd7552b58366ca59cdaf211fb8aa144" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String microsoft::quantum::IrManipulationTestHelper::generateScript</definition>
        <argsstring>(String const &amp;body, String const &amp;args=&quot;&quot;) const</argsstring>
        <name>generateScript</name>
        <param>
          <type>String const &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>String const &amp;</type>
          <declname>args</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Generates a script given the body of the main function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="97" column="16" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="159" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1abcf3ed59354363bdf31926cdde99d17a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::IrManipulationTestHelper::fromString</definition>
        <argsstring>(String const &amp;data)</argsstring>
        <name>fromString</name>
        <param>
          <type>String const &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an LLVM module given from a fully specified IR. This function ignores all inputs from <ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a1a1ed5ffdaeac6763826ce7996dc7f7d" kindref="member">IrManipulationTestHelper::declareOpaque</ref> and <ref refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1aa510af2e3424a9ac7678de251d87be3c" kindref="member">IrManipulationTestHelper::declareFunction</ref>.</para>
<para>Returns false if the IR is invalid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="104" column="14" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ace87d6ad59287dbe58a8f33f62afbee8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String microsoft::quantum::IrManipulationTestHelper::getErrorMessage</definition>
        <argsstring>() const</argsstring>
        <name>getErrorMessage</name>
        <briefdescription>
<para>Gets an error message if the compilation failed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="107" column="16" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="186" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a2a90342ccb92bd7fccb9adc0a5fe0c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool microsoft::quantum::IrManipulationTestHelper::isModuleBroken</definition>
        <argsstring>()</argsstring>
        <name>isModuleBroken</name>
        <briefdescription>
<para>Whether or not the module is broken. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="110" column="14" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="225" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a0b856761e771e6cfe4210132bb048113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ModulePtr &amp;</type>
        <definition>IrManipulationTestHelper::ModulePtr &amp; microsoft::quantum::IrManipulationTestHelper::module</definition>
        <argsstring>()</argsstring>
        <name>module</name>
        <briefdescription>
<para>Returns a reference to the module. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TestTools/IrManipulationTestHelper.hpp" line="116" column="19" bodyfile="TestTools/IrManipulationTestHelper.cpp" bodystart="220" bodyend="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="TestTools/IrManipulationTestHelper.hpp" line="17" column="5" bodyfile="TestTools/IrManipulationTestHelper.hpp" bodystart="18" bodyend="150"/>
    <listofallmembers>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a819d74f6dbfbb8319612f4293c23a1b8" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>applyProfile</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ae21570adabe83466b89afa831f61762c" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>compilation_failed_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a19901fd1188eb3deecb3416b8d37feef" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>context_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1aa510af2e3424a9ac7678de251d87be3c" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>declareFunction</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a1a1ed5ffdaeac6763826ce7996dc7f7d" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>declareOpaque</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ae15b6ef38fc3e5fca602d9096fa85aa8" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>error_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ac246a17feb952bafd30d44649879ef55" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>fromBodyString</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1abcf3ed59354363bdf31926cdde99d17a" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>fromString</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ae22051c193e2b248b7a6a559bb78c8da" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>function_analysis_manager_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1addb1799b7e2d7fbac12bae165d24a24f" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>function_declarations_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1acfd7552b58366ca59cdaf211fb8aa144" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>generateScript</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1acdd48df6b9d535a6a50ea1571ffd870c" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>GeneratorPtr</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ace87d6ad59287dbe58a8f33f62afbee8" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>getErrorMessage</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ac91d13cb17d859a4f94f1aaab4ce42d4" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>gscc_analysis_manager_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ae9ad9386966f23f52e9ebed211719a51" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>hasInstructionSequence</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a002660c6f2da34f069d47f8c54b00944" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>IrManipulationTestHelper</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ac3fa0b31a56b3fba128a0c12f80b0b66" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>IrManipulationTestHelper</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ad58c3fdabc2589426f8aa3a511039350" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>IrManipulationTestHelper</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a2a90342ccb92bd7fccb9adc0a5fe0c8d" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>isModuleBroken</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a2d4d102afdb106e7c9e805dd7aada78b" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>LLVMContext</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ad38c75f2c8dc161363a61da190e4126d" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>loop_analysis_manager_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a0b856761e771e6cfe4210132bb048113" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>module</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a95c04fd344be1d2d8afa6ae09f05c41d" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>Module</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1afb8a5e01ee84916aaf5452aa9a83e06e" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>module_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ab290d3a5c8572d57eea0379e49541dca" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>module_analysis_manager_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a70642b0bb74d2ce7357a63a144e0820b" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>ModulePtr</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a828e75be0d72aa6d0afb03661b15b2a6" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>opaque_declarations_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1acb503ab846564bbd45c60120bd7250b6" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>operator=</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a1cb50e61082d6852c9ab3cbabc0b0541" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>operator=</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a189fd55760c36904970ffaded09f14ac" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>OptimizationLevel</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ab9622ea38897cb662382424c89c621f3" prot="private" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>pass_builder_</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1af39b11478913d614a64df980fd6b95de" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>SMDiagnostic</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a56024ef2e0ef9533e99244fc21bbadb4" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>String</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1aaddbaae145986f5960a67c2b30779d98" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>Strings</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1ab49ea98df2fc8452bc3a70a6def6e066" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>toBodyInstructions</name></member>
      <member refid="classmicrosoft_1_1quantum_1_1_ir_manipulation_test_helper_1a512daff52a5607ad0cf21e072584295d" prot="public" virt="non-virtual"><scope>microsoft::quantum::IrManipulationTestHelper</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
