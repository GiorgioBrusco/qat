<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_profile_8hpp" kind="file" language="C++">
    <compoundname>Profile.hpp</compoundname>
    <includes refid="_allocation_manager_8hpp" local="yes">AllocationManager/AllocationManager.hpp</includes>
    <includes refid="_i_allocation_manager_8hpp" local="yes">AllocationManager/IAllocationManager.hpp</includes>
    <includes refid="_qat_types_8hpp" local="yes">QatTypes/QatTypes.hpp</includes>
    <includes refid="_validator_8hpp" local="yes">Validator/Validator.hpp</includes>
    <includes refid="_llvm_8hpp" local="yes">Llvm/Llvm.hpp</includes>
    <includedby refid="_qat_8cpp" local="yes">Apps/Qat/Qat.cpp</includedby>
    <includedby refid="_profile_generator_8hpp" local="yes">Generators/ProfileGenerator.hpp</includedby>
    <includedby refid="_profile_8cpp" local="yes">Profile/Profile.cpp</includedby>
    <includedby refid="_transformation_rules_pass_8hpp" local="yes">TransformationRulesPass/TransformationRulesPass.hpp</includedby>
    <includedby refid="_validation_pass_8hpp" local="yes">ValidationPass/ValidationPass.hpp</includedby>
    <incdepgraph>
      <node id="21">
        <label>llvm/IR/Module.h</label>
      </node>
      <node id="52">
        <label>iomanip</label>
      </node>
      <node id="19">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="18">
        <label>llvm/IR/Function.h</label>
      </node>
      <node id="33">
        <label>llvm/InitializePasses.h</label>
      </node>
      <node id="20">
        <label>llvm/IR/LLVMContext.h</label>
      </node>
      <node id="11">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="44">
        <label>cstdint</label>
      </node>
      <node id="8">
        <label>llvm/Analysis/InlineCost.h</label>
      </node>
      <node id="34">
        <label>llvm/LinkAllIR.h</label>
      </node>
      <node id="36">
        <label>llvm/Passes/StandardInstrumentations.h</label>
      </node>
      <node id="7">
        <label>Llvm/Llvm.hpp</label>
        <link refid="_llvm_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>llvm/Support/TargetSelect.h</label>
      </node>
      <node id="23">
        <label>llvm/IR/Verifier.h</label>
      </node>
      <node id="2">
        <label>AllocationManager/AllocationManager.hpp</label>
        <link refid="_allocation_manager_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="29">
        <label>llvm/Transforms/Scalar/DCE.h</label>
      </node>
      <node id="51">
        <label>unordered_set</label>
      </node>
      <node id="46">
        <label>ValidationPass/ValidationPassConfiguration.hpp</label>
        <link refid="_validation_pass_configuration_8hpp_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>AllocationManager/IAllocationManager.hpp</label>
        <link refid="_i_allocation_manager_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>Commandline/ConfigurationManager.hpp</label>
        <link refid="_configuration_manager_8hpp_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>llvm/Transforms/Scalar/LoopUnrollPass.h</label>
      </node>
      <node id="28">
        <label>llvm/Transforms/Scalar/ADCE.h</label>
      </node>
      <node id="35">
        <label>llvm/MC/SubtargetFeature.h</label>
      </node>
      <node id="43">
        <label>Logging/ILogger.hpp</label>
        <link refid="_i_logger_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>Validator/Validator.hpp</label>
        <link refid="_validator_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>llvm/Passes/PassPlugin.h</label>
      </node>
      <node id="48">
        <label>Commandline/ConfigBind.hpp</label>
        <link refid="_config_bind_8hpp_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>vector</label>
      </node>
      <node id="45">
        <label>Logging/LogCollection.hpp</label>
        <link refid="_log_collection_8hpp_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>Commandline/ParameterParser.hpp</label>
        <link refid="_parameter_parser_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sstream</label>
      </node>
      <node id="27">
        <label>llvm/LinkAllPasses.h</label>
      </node>
      <node id="15">
        <label>llvm/IR/BasicBlock.h</label>
      </node>
      <node id="53">
        <label>iostream</label>
      </node>
      <node id="39">
        <label>llvm/Target/TargetMachine.h</label>
      </node>
      <node id="12">
        <label>llvm/Transforms/IPO/Inliner.h</label>
      </node>
      <node id="40">
        <label>unordered_map</label>
      </node>
      <node id="24">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="14">
        <label>llvm/Transforms/Utils/Cloning.h</label>
      </node>
      <node id="9">
        <label>llvm/Passes/PassBuilder.h</label>
      </node>
      <node id="16">
        <label>llvm/IR/Constants.h</label>
      </node>
      <node id="22">
        <label>llvm/IR/Type.h</label>
      </node>
      <node id="37">
        <label>llvm/Support/InitLLVM.h</label>
      </node>
      <node id="4">
        <label>QatTypes/QatTypes.hpp</label>
        <link refid="_qat_types_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>Commandline/IConfigBind.hpp</label>
        <link refid="_i_config_bind_8hpp_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="31">
        <label>llvm/Linker/Linker.h</label>
      </node>
      <node id="55">
        <label>type_traits</label>
      </node>
      <node id="1">
        <label>Profile/Profile.hpp</label>
        <link refid="_profile_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>llvm/Transforms/Utils/BasicBlockUtils.h</label>
      </node>
      <node id="30">
        <label>llvm/Analysis/ConstantFolding.h</label>
      </node>
      <node id="17">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="25">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="56">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>TransformationRulesPass/TransformationRulesPass.hpp</label>
        <link refid="_transformation_rules_pass_8hpp_source"/>
      </node>
      <node id="4">
        <label>TestTools/IrManipulationTestHelper.hpp</label>
        <link refid="_ir_manipulation_test_helper_8hpp_source"/>
      </node>
      <node id="2">
        <label>Generators/ProfileGenerator.hpp</label>
        <link refid="_profile_generator_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ValidationPass/ValidationPass.hpp</label>
        <link refid="_validation_pass_8hpp_source"/>
      </node>
      <node id="3">
        <label>Generators/DefaultProfileGenerator.hpp</label>
        <link refid="_default_profile_generator_8hpp_source"/>
      </node>
      <node id="1">
        <label>Profile/Profile.hpp</label>
        <link refid="_profile_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_profile" prot="public">microsoft::quantum::Profile</innerclass>
    <innernamespace refid="namespacemicrosoft">microsoft</innernamespace>
    <innernamespace refid="namespacemicrosoft_1_1quantum">microsoft::quantum</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Microsoft<sp/>Corporation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AllocationManager/AllocationManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AllocationManager/IAllocationManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;QatTypes/QatTypes.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Validator/Validator.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Llvm/Llvm.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">microsoft</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">quantum</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ProfileGenerator;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classmicrosoft_1_1quantum_1_1_profile" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="classmicrosoft_1_1quantum_1_1_profile_1afbb7b83f602e4746a4912a5e47658304" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1afbb7b83f602e4746a4912a5e47658304" kindref="member">AllocationManagerPtr</ref><sp/>=<sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_allocation_manager_1a7c77d7b2d94d3b6a98bb5402a854cca4" kindref="member">IAllocationManager::AllocationManagerPtr</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classmicrosoft_1_1quantum_1_1_profile_1aecedd32ceddf4b4058c6a0c7f74aa386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1aecedd32ceddf4b4058c6a0c7f74aa386" kindref="member">ValidatorPtr</ref><sp/>=<sp/>Validator::ValidatorPtr;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref>(</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::TargetMachine*<sp/>target_machine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1afbb7b83f602e4746a4912a5e47658304" kindref="member">AllocationManagerPtr</ref><sp/>qubit_allocation_manager<sp/><sp/>=<sp/><ref refid="classmicrosoft_1_1quantum_1_1_basic_allocation_manager_1adfbd5dd1597bf34ed173f303618f9453" kindref="member">BasicAllocationManager::createNew</ref>(),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1afbb7b83f602e4746a4912a5e47658304" kindref="member">AllocationManagerPtr</ref><sp/>result_allocation_manager<sp/>=<sp/><ref refid="classmicrosoft_1_1quantum_1_1_basic_allocation_manager_1adfbd5dd1597bf34ed173f303618f9453" kindref="member">BasicAllocationManager::createNew</ref>());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>construction<sp/>not<sp/>allowed<sp/>as<sp/>this<sp/>leads<sp/>to<sp/>invalid<sp/>configuration<sp/>of<sp/>the<sp/>allocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>managers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref>(<ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref>(<ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref>&amp;<sp/>operator=(<ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref>&amp;<sp/>operator=(<ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classmicrosoft_1_1quantum_1_1_profile" kindref="compound">Profile</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Profile<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1a4e15a93d7b5f5d7174e8c63947787ffb" kindref="member">apply</ref>(llvm::Module&amp;<sp/>module);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1a2df872e9e0d0cfa7c1261e25a32fb501" kindref="member">verify</ref>(llvm::Module&amp;<sp/>module);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1ae4264aceff4ee846d62a500329b4d0e2" kindref="member">validate</ref>(llvm::Module&amp;<sp/>module);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1afbb7b83f602e4746a4912a5e47658304" kindref="member">AllocationManagerPtr</ref><sp/>getQubitAllocationManager();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1afbb7b83f602e4746a4912a5e47658304" kindref="member">AllocationManagerPtr</ref><sp/>getResultAllocationManager();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensuring<sp/>that<sp/>ProfileGenerator<sp/>has<sp/>access<sp/>to<sp/>following<sp/>protected<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_profile_generator" kindref="compound">ProfileGenerator</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1a789d98dc3ff0c7900a5e752aac80a4dd" kindref="member">setModulePassManager</ref>(llvm::ModulePassManager&amp;&amp;<sp/>manager);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1a7064cdc9c5b0673d27b01d12f23c3528" kindref="member">setValidator</ref>(<ref refid="classmicrosoft_1_1quantum_1_1_profile_1aecedd32ceddf4b4058c6a0c7f74aa386" kindref="member">ValidatorPtr</ref>&amp;&amp;<sp/>validator);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::PassBuilder&amp;<sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1ab3226330daa11ac92dc8ec243d8a14b7" kindref="member">passBuilder</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::LoopAnalysisManager&amp;<sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1a7e72137e5679ffc344504a8259a2480a" kindref="member">loopAnalysisManager</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::FunctionAnalysisManager&amp;<sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1afde169bb2afbf338563bcd6f7afaf06a" kindref="member">functionAnalysisManager</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::CGSCCAnalysisManager&amp;<sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1aacd449e39f53fc37829826a9c71b78ae" kindref="member">gsccAnalysisManager</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::ModuleAnalysisManager&amp;<sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1a9be63ecec09cad26dfc1c99e54845bee" kindref="member">moduleAnalysisManager</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PassInstrumentationCallbacksPtr<sp/>=<sp/>std::unique_ptr&lt;llvm::PassInstrumentationCallbacks&gt;;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>StandardInstrumentationsPtr<sp/><sp/><sp/><sp/><sp/>=<sp/>std::unique_ptr&lt;llvm::StandardInstrumentations&gt;;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PassBuilderPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::unique_ptr&lt;llvm::PassBuilder&gt;;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>registerEPCallbacks(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verify_each_pass,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PassManager&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tryParsePipelineText(llvm::PassBuilder&amp;<sp/>pass_builder,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pipeline_options)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipeline_options.empty())</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PassManager<sp/>pass_manager;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>pass_builder.parsePassPipeline(pass_manager,<sp/>pipeline_options))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::errs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>parse<sp/>-&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pipeline_options<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>pipeline:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>toString(std::move(err))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>name_{};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLVM<sp/>logic<sp/>to<sp/>run<sp/>the<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::LoopAnalysisManager<sp/><sp/><sp/><sp/><sp/>loop_analysis_manager_;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::FunctionAnalysisManager<sp/>function_analysis_manager_;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::CGSCCAnalysisManager<sp/><sp/><sp/><sp/>gscc_analysis_manager_;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::ModuleAnalysisManager<sp/><sp/><sp/>module_analysis_manager_;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::Optional&lt;llvm::PGOOptions&gt;<sp/>pgo_options_;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PassInstrumentationCallbacksPtr<sp/><sp/>pass_instrumentation_callbacks_;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StandardInstrumentationsPtr<sp/><sp/><sp/><sp/><sp/><sp/>standard_instrumentations_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::PipelineTuningOptions<sp/><sp/><sp/><sp/><sp/><sp/>pipeline_tuning_options_;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PassBuilderPtr<sp/>pass_builder_;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llvm::ModulePassManager<sp/>module_pass_manager_{};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocation<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1afbb7b83f602e4746a4912a5e47658304" kindref="member">AllocationManagerPtr</ref><sp/>qubit_allocation_manager_{};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1afbb7b83f602e4746a4912a5e47658304" kindref="member">AllocationManagerPtr</ref><sp/>result_allocation_manager_{};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_profile_1aecedd32ceddf4b4058c6a0c7f74aa386" kindref="member">ValidatorPtr</ref><sp/>validator_{};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>peephole_ep_pipeline_{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>late_loop_optimizations_ep_pipeline_{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>loop_optimizer_end_ep_pipeline_{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>scalar_optimizer_late_ep_pipeline_{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cgscc_optimizer_late_ep_pipeline_{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>vectorizer_start_ep_pipeline_{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>pipeline_start_ep_pipeline_{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>optimizer_last_ep_pipeline_{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>quantum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>microsoft</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Profile/Profile.hpp"/>
  </compounddef>
</doxygen>
