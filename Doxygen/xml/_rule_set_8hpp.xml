<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_rule_set_8hpp" kind="file" language="C++">
    <compoundname>RuleSet.hpp</compoundname>
    <includes refid="_i_allocation_manager_8hpp" local="yes">AllocationManager/IAllocationManager.hpp</includes>
    <includes refid="_i_operand_prototype_8hpp" local="yes">Rules/IOperandPrototype.hpp</includes>
    <includes refid="_replacement_rule_8hpp" local="yes">Rules/ReplacementRule.hpp</includes>
    <includes refid="_llvm_8hpp" local="yes">Llvm/Llvm.hpp</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includedby refid="_default_profile_generator_8cpp" local="yes">Generators/DefaultProfileGenerator.cpp</includedby>
    <includedby refid="_default_profile_generator_8hpp" local="yes">Generators/DefaultProfileGenerator.hpp</includedby>
    <includedby refid="_factory_8hpp" local="yes">Rules/Factory.hpp</includedby>
    <includedby refid="_rule_set_8cpp" local="yes">Rules/RuleSet.cpp</includedby>
    <includedby refid="_basic_rule_set_ops_8cpp" local="yes">Rules/Tests/Unit/BasicRuleSetOps.cpp</includedby>
    <includedby refid="_transformation_rules_pass_8hpp" local="yes">TransformationRulesPass/TransformationRulesPass.hpp</includedby>
    <incdepgraph>
      <node id="45">
        <label>Rules/Patterns/Instruction.hpp</label>
        <link refid="_instruction_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>llvm/IR/Module.h</label>
      </node>
      <node id="6">
        <label>Rules/IOperandPrototype.hpp</label>
        <link refid="_i_operand_prototype_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="43">
        <label>Rules/Patterns/AnyPattern.hpp</label>
        <link refid="_any_pattern_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>llvm/IR/Function.h</label>
      </node>
      <node id="33">
        <label>llvm/InitializePasses.h</label>
      </node>
      <node id="20">
        <label>llvm/IR/LLVMContext.h</label>
      </node>
      <node id="11">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="8">
        <label>llvm/Analysis/InlineCost.h</label>
      </node>
      <node id="34">
        <label>llvm/LinkAllIR.h</label>
      </node>
      <node id="36">
        <label>llvm/Passes/StandardInstrumentations.h</label>
      </node>
      <node id="7">
        <label>Llvm/Llvm.hpp</label>
        <link refid="_llvm_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>llvm/Support/TargetSelect.h</label>
      </node>
      <node id="23">
        <label>llvm/IR/Verifier.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="29">
        <label>llvm/Transforms/Scalar/DCE.h</label>
      </node>
      <node id="2">
        <label>AllocationManager/IAllocationManager.hpp</label>
        <link refid="_i_allocation_manager_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>llvm/Transforms/Scalar/LoopUnrollPass.h</label>
      </node>
      <node id="28">
        <label>llvm/Transforms/Scalar/ADCE.h</label>
      </node>
      <node id="35">
        <label>llvm/MC/SubtargetFeature.h</label>
      </node>
      <node id="10">
        <label>llvm/Passes/PassPlugin.h</label>
      </node>
      <node id="41">
        <label>vector</label>
      </node>
      <node id="27">
        <label>llvm/LinkAllPasses.h</label>
      </node>
      <node id="15">
        <label>llvm/IR/BasicBlock.h</label>
      </node>
      <node id="42">
        <label>Rules/ReplacementRule.hpp</label>
        <link refid="_replacement_rule_8hpp_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>llvm/Target/TargetMachine.h</label>
      </node>
      <node id="12">
        <label>llvm/Transforms/IPO/Inliner.h</label>
      </node>
      <node id="40">
        <label>unordered_map</label>
      </node>
      <node id="24">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="14">
        <label>llvm/Transforms/Utils/Cloning.h</label>
      </node>
      <node id="9">
        <label>llvm/Passes/PassBuilder.h</label>
      </node>
      <node id="44">
        <label>Rules/Patterns/CallPattern.hpp</label>
        <link refid="_call_pattern_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>llvm/IR/Constants.h</label>
      </node>
      <node id="22">
        <label>llvm/IR/Type.h</label>
      </node>
      <node id="37">
        <label>llvm/Support/InitLLVM.h</label>
      </node>
      <node id="3">
        <label>QatTypes/QatTypes.hpp</label>
        <link refid="_qat_types_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="31">
        <label>llvm/Linker/Linker.h</label>
      </node>
      <node id="1">
        <label>Rules/RuleSet.hpp</label>
        <link refid="_rule_set_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>llvm/Transforms/Utils/BasicBlockUtils.h</label>
      </node>
      <node id="30">
        <label>llvm/Analysis/ConstantFolding.h</label>
      </node>
      <node id="17">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="25">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>TransformationRulesPass/TransformationRulesPass.hpp</label>
        <link refid="_transformation_rules_pass_8hpp_source"/>
      </node>
      <node id="2">
        <label>Generators/DefaultProfileGenerator.hpp</label>
        <link refid="_default_profile_generator_8hpp_source"/>
      </node>
      <node id="1">
        <label>Rules/RuleSet.hpp</label>
        <link refid="_rule_set_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Rules/Factory.hpp</label>
        <link refid="_factory_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_rule_set" prot="public">microsoft::quantum::RuleSet</innerclass>
    <innernamespace refid="namespacemicrosoft">microsoft</innernamespace>
    <innernamespace refid="namespacemicrosoft_1_1quantum">microsoft::quantum</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Microsoft<sp/>Corporation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AllocationManager/IAllocationManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Rules/IOperandPrototype.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Rules/ReplacementRule.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Llvm/Llvm.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">microsoft</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">quantum</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classmicrosoft_1_1quantum_1_1_rule_set" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReplacementRulePtr<sp/><sp/><sp/>=<sp/>std::shared_ptr&lt;ReplacementRule&gt;;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Rules<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::vector&lt;ReplacementRulePtr&gt;;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Replacements<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classmicrosoft_1_1quantum_1_1_replacement_rule_1aca9c759c6f4aace29dc3b0b3b05ce9e1" kindref="member">ReplacementRule::Replacements</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Captures<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>IOperandPrototype::Captures;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Instruction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>llvm::Instruction;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>llvm::Value;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Builder<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classmicrosoft_1_1quantum_1_1_replacement_rule_1ab975e38f598fc4e3a84039f84ab404d1" kindref="member">ReplacementRule::Builder</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>AllocationManagerPtr<sp/>=<sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_allocation_manager_1a7c77d7b2d94d3b6a98bb5402a854cca4" kindref="member">IAllocationManager::AllocationManagerPtr</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref>(<ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref>(<ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref>&amp;&amp;)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref>&amp;<sp/>operator=(<ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref>&amp;<sp/>operator=(<ref refid="classmicrosoft_1_1quantum_1_1_rule_set" kindref="compound">RuleSet</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Operating<sp/>rule<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set_1a0d6c972010cf86830f113fdf6a3a877c" kindref="member">matchAndReplace</ref>(Instruction*<sp/>value,<sp/>Replacements&amp;<sp/>replacements);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>and<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set_1ad26c91b5a8f3bd63abc39b13f1a23b85" kindref="member">addRule</ref>(ReplacementRulePtr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rule);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set_1ad26c91b5a8f3bd63abc39b13f1a23b85" kindref="member">addRule</ref>(<ref refid="classmicrosoft_1_1quantum_1_1_replacement_rule" kindref="compound">ReplacementRule</ref>&amp;&amp;<sp/>rule);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set_1aa5500ad922f898edcb15a14dd1439ccf" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="classmicrosoft_1_1quantum_1_1_rule_set_1a64a15bf9496696db0613bab1c80487f2" kindref="member">size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rules<sp/>rules_;<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>quantum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>microsoft</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Rules/RuleSet.hpp"/>
  </compounddef>
</doxygen>
