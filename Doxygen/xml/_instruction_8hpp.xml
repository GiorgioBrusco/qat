<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_instruction_8hpp" kind="file" language="C++">
    <compoundname>Instruction.hpp</compoundname>
    <includes refid="_i_operand_prototype_8hpp" local="yes">Rules/IOperandPrototype.hpp</includes>
    <includes refid="_llvm_8hpp" local="yes">Llvm/Llvm.hpp</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includedby refid="_basic_block_8cpp" local="yes">Rules/Notation/BasicBlock.cpp</includedby>
    <includedby refid="_bit_cast_8cpp" local="yes">Rules/Notation/BitCast.cpp</includedby>
    <includedby refid="_branch_8cpp" local="yes">Rules/Notation/Branch.cpp</includedby>
    <includedby refid="_call_by_name_only_8cpp" local="yes">Rules/Notation/CallByNameOnly.cpp</includedby>
    <includedby refid="_capture_8cpp" local="yes">Rules/Notation/Capture.cpp</includedby>
    <includedby refid="_const_int_8cpp" local="yes">Rules/Notation/ConstInt.cpp</includedby>
    <includedby refid="_int_to_ptr_8cpp" local="yes">Rules/Notation/IntToPtr.cpp</includedby>
    <includedby refid="_load_8cpp" local="yes">Rules/Notation/Load.cpp</includedby>
    <includedby refid="_notation_8cpp" local="yes">Rules/Notation/Notation.cpp</includedby>
    <includedby refid="_notation_8hpp" local="yes">Rules/Notation/Notation.hpp</includedby>
    <includedby refid="_phi_8ipp" local="yes">Rules/Notation/Phi.ipp</includedby>
    <includedby refid="_select_8cpp" local="yes">Rules/Notation/Select.cpp</includedby>
    <includedby refid="_store_8cpp" local="yes">Rules/Notation/Store.cpp</includedby>
    <includedby refid="_switch_8cpp" local="yes">Rules/Notation/Switch.cpp</includedby>
    <includedby refid="_instruction_8cpp" local="yes">Rules/Patterns/Instruction.cpp</includedby>
    <includedby refid="_replacement_rule_8hpp" local="yes">Rules/ReplacementRule.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>Rules/Patterns/Instruction.hpp</label>
        <link refid="_instruction_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>llvm/IR/Module.h</label>
      </node>
      <node id="2">
        <label>Rules/IOperandPrototype.hpp</label>
        <link refid="_i_operand_prototype_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>llvm/IR/IRBuilder.h</label>
      </node>
      <node id="14">
        <label>llvm/IR/Function.h</label>
      </node>
      <node id="29">
        <label>llvm/InitializePasses.h</label>
      </node>
      <node id="16">
        <label>llvm/IR/LLVMContext.h</label>
      </node>
      <node id="7">
        <label>llvm/Support/raw_ostream.h</label>
      </node>
      <node id="4">
        <label>llvm/Analysis/InlineCost.h</label>
      </node>
      <node id="30">
        <label>llvm/LinkAllIR.h</label>
      </node>
      <node id="32">
        <label>llvm/Passes/StandardInstrumentations.h</label>
      </node>
      <node id="3">
        <label>Llvm/Llvm.hpp</label>
        <link refid="_llvm_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>llvm/Support/TargetSelect.h</label>
      </node>
      <node id="19">
        <label>llvm/IR/Verifier.h</label>
      </node>
      <node id="25">
        <label>llvm/Transforms/Scalar/DCE.h</label>
      </node>
      <node id="22">
        <label>llvm/Transforms/Scalar/LoopUnrollPass.h</label>
      </node>
      <node id="24">
        <label>llvm/Transforms/Scalar/ADCE.h</label>
      </node>
      <node id="31">
        <label>llvm/MC/SubtargetFeature.h</label>
      </node>
      <node id="6">
        <label>llvm/Passes/PassPlugin.h</label>
      </node>
      <node id="37">
        <label>vector</label>
      </node>
      <node id="23">
        <label>llvm/LinkAllPasses.h</label>
      </node>
      <node id="11">
        <label>llvm/IR/BasicBlock.h</label>
      </node>
      <node id="35">
        <label>llvm/Target/TargetMachine.h</label>
      </node>
      <node id="8">
        <label>llvm/Transforms/IPO/Inliner.h</label>
      </node>
      <node id="36">
        <label>unordered_map</label>
      </node>
      <node id="20">
        <label>llvm/IRReader/IRReader.h</label>
      </node>
      <node id="10">
        <label>llvm/Transforms/Utils/Cloning.h</label>
      </node>
      <node id="5">
        <label>llvm/Passes/PassBuilder.h</label>
      </node>
      <node id="12">
        <label>llvm/IR/Constants.h</label>
      </node>
      <node id="18">
        <label>llvm/IR/Type.h</label>
      </node>
      <node id="33">
        <label>llvm/Support/InitLLVM.h</label>
      </node>
      <node id="28">
        <label>llvm/Bitcode/BitcodeWriter.h</label>
      </node>
      <node id="27">
        <label>llvm/Linker/Linker.h</label>
      </node>
      <node id="9">
        <label>llvm/Transforms/Utils/BasicBlockUtils.h</label>
      </node>
      <node id="26">
        <label>llvm/Analysis/ConstantFolding.h</label>
      </node>
      <node id="13">
        <label>llvm/IR/DerivedTypes.h</label>
      </node>
      <node id="21">
        <label>llvm/Support/SourceMgr.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>Rules/Patterns/Instruction.hpp</label>
        <link refid="_instruction_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>TransformationRulesPass/TransformationRulesPass.hpp</label>
        <link refid="_transformation_rules_pass_8hpp_source"/>
      </node>
      <node id="2">
        <label>Rules/Notation/Notation.hpp</label>
        <link refid="_notation_8hpp_source"/>
      </node>
      <node id="3">
        <label>Rules/ReplacementRule.hpp</label>
        <link refid="_replacement_rule_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Generators/DefaultProfileGenerator.hpp</label>
        <link refid="_default_profile_generator_8hpp_source"/>
      </node>
      <node id="5">
        <label>Rules/RuleSet.hpp</label>
        <link refid="_rule_set_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Rules/Factory.hpp</label>
        <link refid="_factory_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_store_pattern" prot="public">microsoft::quantum::StorePattern</innerclass>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_load_pattern" prot="public">microsoft::quantum::LoadPattern</innerclass>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_bit_cast_pattern" prot="public">microsoft::quantum::BitCastPattern</innerclass>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_int_to_ptr_pattern" prot="public">microsoft::quantum::IntToPtrPattern</innerclass>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_const_int_pattern" prot="public">microsoft::quantum::ConstIntPattern</innerclass>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_branch_pattern" prot="public">microsoft::quantum::BranchPattern</innerclass>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_select_pattern" prot="public">microsoft::quantum::SelectPattern</innerclass>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_basic_block_pattern" prot="public">microsoft::quantum::BasicBlockPattern</innerclass>
    <innerclass refid="classmicrosoft_1_1quantum_1_1_switch_pattern" prot="public">microsoft::quantum::SwitchPattern</innerclass>
    <innernamespace refid="namespacemicrosoft">microsoft</innernamespace>
    <innernamespace refid="namespacemicrosoft_1_1quantum">microsoft::quantum</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>Microsoft<sp/>Corporation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Rules/IOperandPrototype.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Llvm/Llvm.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">microsoft</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">quantum</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classmicrosoft_1_1quantum_1_1_store_pattern" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_store_pattern" kindref="compound">StorePattern</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" kindref="compound">IOperandPrototype</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_store_pattern_1a1a6f7b94623d2d9706784e5c2e6632c7" kindref="member">match</ref>(Value*<sp/>instr,<sp/>Captures&amp;<sp/>captures)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Child<sp/><ref refid="classmicrosoft_1_1quantum_1_1_store_pattern_1a7bfd5b1923bb1e4cea37d5825ad663ac" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classmicrosoft_1_1quantum_1_1_load_pattern" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_load_pattern" kindref="compound">LoadPattern</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" kindref="compound">IOperandPrototype</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_load_pattern_1a6dacbaef74232223d5b26aac1517602e" kindref="member">match</ref>(Value*<sp/>instr,<sp/>Captures&amp;<sp/>captures)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Child<sp/><ref refid="classmicrosoft_1_1quantum_1_1_load_pattern_1ae684a0104ea08efe685518c2d42324bf" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classmicrosoft_1_1quantum_1_1_bit_cast_pattern" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_bit_cast_pattern" kindref="compound">BitCastPattern</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" kindref="compound">IOperandPrototype</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_bit_cast_pattern_1ad928c51af6c5e8662eb6fe0f8f37e6ca" kindref="member">match</ref>(Value*<sp/>instr,<sp/>Captures&amp;<sp/>captures)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Child<sp/><ref refid="classmicrosoft_1_1quantum_1_1_bit_cast_pattern_1ae759a4a83c3d3a4fdeface11f767d40f" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classmicrosoft_1_1quantum_1_1_int_to_ptr_pattern" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_int_to_ptr_pattern" kindref="compound">IntToPtrPattern</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" kindref="compound">IOperandPrototype</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_int_to_ptr_pattern_1ab25edadcb4b25f3af498ada16d43fbe8" kindref="member">match</ref>(Value*<sp/>instr,<sp/>Captures&amp;<sp/>captures)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Child<sp/><ref refid="classmicrosoft_1_1quantum_1_1_int_to_ptr_pattern_1a349b928e39fe516c8b121c26539ef784" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classmicrosoft_1_1quantum_1_1_const_int_pattern" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_const_int_pattern" kindref="compound">ConstIntPattern</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" kindref="compound">IOperandPrototype</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_const_int_pattern_1ae02f573f32c166d13c561830dfdb8e2e" kindref="member">match</ref>(Value*<sp/>instr,<sp/>Captures&amp;<sp/>captures)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Child<sp/><ref refid="classmicrosoft_1_1quantum_1_1_const_int_pattern_1ad6caaf1d53b74bf3cc1768f9146a0a55" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classmicrosoft_1_1quantum_1_1_branch_pattern" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_branch_pattern" kindref="compound">BranchPattern</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" kindref="compound">IOperandPrototype</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_branch_pattern_1a66c84e12d5838e2dbd4be1c90a674cfc" kindref="member">match</ref>(Value*<sp/>instr,<sp/>Captures&amp;<sp/>captures)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Child<sp/><ref refid="classmicrosoft_1_1quantum_1_1_branch_pattern_1a1e01906663829810bd1dbd5154ae8276" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classmicrosoft_1_1quantum_1_1_select_pattern" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_select_pattern" kindref="compound">SelectPattern</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" kindref="compound">IOperandPrototype</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_select_pattern_1aace2c5289656f1c86e03f5a0a9a0a65c" kindref="member">match</ref>(Value*<sp/>instr,<sp/>Captures&amp;<sp/>captures)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Child<sp/><ref refid="classmicrosoft_1_1quantum_1_1_select_pattern_1a6592d610b3d46c307a885432a1ef4f46" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classmicrosoft_1_1quantum_1_1_basic_block_pattern" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_basic_block_pattern" kindref="compound">BasicBlockPattern</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" kindref="compound">IOperandPrototype</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_basic_block_pattern_1a19329f853e85f43be513dd96b980580a" kindref="member">match</ref>(Value*<sp/>instr,<sp/>Captures&amp;<sp/>captures)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Child<sp/><ref refid="classmicrosoft_1_1quantum_1_1_basic_block_pattern_1a0b6bcfffcc0e2af94b132e41a526a3d7" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classmicrosoft_1_1quantum_1_1_switch_pattern" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmicrosoft_1_1quantum_1_1_switch_pattern" kindref="compound">SwitchPattern</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmicrosoft_1_1quantum_1_1_i_operand_prototype" kindref="compound">IOperandPrototype</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><ref refid="classmicrosoft_1_1quantum_1_1_switch_pattern_1a736b3d9b93de5e9c91fd5e894ba2d7bc" kindref="member">match</ref>(Value*<sp/>instr,<sp/>Captures&amp;<sp/>captures)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Child<sp/><ref refid="classmicrosoft_1_1quantum_1_1_switch_pattern_1a0ce0c7c2a53fc3251d9ee575364d0956" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>quantum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>microsoft</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Rules/Patterns/Instruction.hpp"/>
  </compounddef>
</doxygen>
